# -*- coding: utf-8 -*-
"""proyekakhiranalisisdata.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hZgDN6ODjdmOFXiZXYKn1f3MA7ybsdq1

Memanggil library
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import streamlit as st
from babel.numbers import format_currency
sns.set(style='dark')

"""Menyiapkan Dataframe"""

day_df = pd.read_csv('/content/day.csv')
day_df.head()

day_df.info()

day_df.describe(include="all")

datetime_columns = ["dteday"]
day_df.sort_values(by="dteday", inplace=True)
day_df.reset_index(inplace=True)

for column in datetime_columns:
    day_df[column] = pd.to_datetime(day_df[column])

day_df.groupby(by="season").agg({
    "casual":"sum",
    "registered":"sum",
    "cnt":"sum"
})

plt.figure(figsize=(10, 5))

sns.barplot(
    y="cnt",
    x="season",
    data=day_df,
)
plt.title("total rental bikes vs season", loc="center", fontsize=15)
plt.ylabel("total rental bikes")
plt.xlabel("season")
plt.tick_params(axis='x', labelsize=12)
plt.show()

day_df.groupby(by="workingday").agg({
    "casual":"sum",
    "registered":"sum",
    "cnt":"sum",
})

plt.figure(figsize=(10, 5))


sns.barplot(
    y="cnt",
    x="workingday",
    data=day_df,
)
plt.title("total rental bikes vs working day", loc="center", fontsize=15)
plt.ylabel("total rental bikes")
plt.xlabel("season")
plt.tick_params(axis='x', labelsize=12)
plt.show()

"""Membuat Komponen Filter"""

min_date = day_df["dteday"].min()
max_date = day_df["dteday"].max()

with st.sidebar:

    start_date, end_date = st.date_input(
        label='Rentang Waktu',min_value=min_date,
        max_value=max_date,
        value=[min_date, max_date]
        )

"""Melengkapi Dashboard dengan Berbagai Visualisasi Data

"""

st.header('Bike Sharing Dataset Dashboard')

st.subheader('Total Rental Bikes vs Season')

st.subheader('Daily Orders')

total_orders = day_df.cnt.sum()
st.metric("Total orders", value=total_orders)

fig, ax = plt.subplots(figsize=(16, 8))
ax.plot(
    day_df["dteday"],
    day_df["cnt"],
    marker='o',
    linewidth=2,
    color="#90CAF9"
    )
ax.tick_params(axis='y', labelsize=20)
ax.tick_params(axis='x', labelsize=15)

st.pyplot(fig)

st.subheader("Total Rental Bikes")
st.subheader("Season = 1:springer, 2:summer, 3:fall, 4:winter")
st.subheader("Working day = if day is neither weekend nor holiday is 1, otherwise is 0.")

fig, ax = plt.subplots(nrows=1, ncols=2, figsize=(35, 15))

colors = ["#90CAF9", "#D3D3D3", "#D3D3D3", "#D3D3D3", "#D3D3D3"]

sns.barplot(
y="cnt",
x="season",
data=day_df,
)
plt.title("total rental bikes vs season", loc="center", fontsize=15)
plt.ylabel("total rental bikes")
plt.xlabel("season")
plt.tick_params(axis='x', labelsize=12)
plt.show()

sns.barplot(
y="cnt",
x="workingday",
data=day_df,
)
plt.title("total rental bikes vs working day", loc="center", fontsize=15)
plt.ylabel("total rental bikes")
plt.xlabel("working day or not")
plt.tick_params(axis='x', labelsize=12)
plt.show()

st.pyplot(fig)